#[repr(usize)]
#[derive(Debug)]
pub enum IORegister {
    ClkIntFactorFlags = 0xF00,
    SwIntFactorFlags = 0xF01,
    ProgIntFactorFlags = 0xF02,
    SerialIntFactorFlags = 0xF03,
    K00K03IntFactorFlags = 0xF04,
    K10K13IntFactorFlags = 0xF05,
    ClockIntMasks = 0xF10,
    SwIntMasks = 0xF11,
    ProgIntMasks = 0xF12,
    SerialIntMasks = 0xF13,
    K00K03IntMasks = 0xF14,
    K10K13IntMasks = 0xF15,
    ClockTimerData1 = 0xF20,
    ClockTimerData2 = 0xF21,
    SwTimerDataL = 0xF22,
    SwTimerDataH = 0xF23,
    ProgTimerDataL = 0xF24,
    ProgTimerDataH = 0xF25,
    ProgTimerReloadDataL = 0xF26,
    ProgTimerReloadDataH = 0xF27,
    SerialIfDataL = 0xF30,
    SerialIfDataH = 0xF31,
    K00K03InputPort = 0xF40,
    K00K03InputRelation = 0xF41,
    K10K13InputPort = 0xF42,
    R00R03OutputPort = 0xF50,
    R10R13OutputPort = 0xF51,
    R20R23OutputPort = 0xF52,
    R30R33OutputPort = 0xF53,
    R40R43BzOutputPort = 0xF54,
    P00P03IoPort = 0xF60,
    P10P13IoPort = 0xF61,
    P20P23IoPort = 0xF62,
    P30P33IoPort = 0xF63,
    CpuOsc3Ctrl = 0xF70,
    LcdCtrl = 0xF71,
    LcdContrast = 0xF72,
    SvdCtrl = 0xF73,
    BuzzerCtrl1 = 0xF74,
    BuzzerCtrl2 = 0xF75,
    ClkWdTimerCtrl = 0xF76,
    SwTimerCtrl = 0xF77,
    ProgTimerCtrl = 0xF78,
    ProgTimerClkSel = 0xF79,
    SerialIfClkSel = 0xF7A,
    HighImpedanceOutputCtrl = 0xF7B,
    IoCtrl = 0xF7D,
    IoPullupCfg = 0xF7E,
}

impl IORegister {
    pub fn from_usize(addr: usize) -> Self {
        match addr {
            0xF00 => IORegister::ClkIntFactorFlags,
            0xF01 => IORegister::SwIntFactorFlags,
            0xF02 => IORegister::ProgIntFactorFlags,
            0xF03 => IORegister::SerialIntFactorFlags,
            0xF04 => IORegister::K00K03IntFactorFlags,
            0xF05 => IORegister::K10K13IntFactorFlags,
            0xF10 => IORegister::ClockIntMasks,
            0xF11 => IORegister::SwIntMasks,
            0xF12 => IORegister::ProgIntMasks,
            0xF13 => IORegister::SerialIntMasks,
            0xF14 => IORegister::K00K03IntMasks,
            0xF15 => IORegister::K10K13IntMasks,
            0xF20 => IORegister::ClockTimerData1,
            0xF21 => IORegister::ClockTimerData2,
            0xF22 => IORegister::SwTimerDataL,
            0xF23 => IORegister::SwTimerDataH,
            0xF24 => IORegister::ProgTimerDataL,
            0xF25 => IORegister::ProgTimerDataH,
            0xF26 => IORegister::ProgTimerReloadDataL,
            0xF27 => IORegister::ProgTimerReloadDataH,
            0xF30 => IORegister::SerialIfDataL,
            0xF31 => IORegister::SerialIfDataH,
            0xF40 => IORegister::K00K03InputPort,
            0xF41 => IORegister::K00K03InputRelation,
            0xF42 => IORegister::K10K13InputPort,
            0xF50 => IORegister::R00R03OutputPort,
            0xF51 => IORegister::R10R13OutputPort,
            0xF52 => IORegister::R20R23OutputPort,
            0xF53 => IORegister::R30R33OutputPort,
            0xF54 => IORegister::R40R43BzOutputPort,
            0xF60 => IORegister::P00P03IoPort,
            0xF61 => IORegister::P10P13IoPort,
            0xF62 => IORegister::P20P23IoPort,
            0xF63 => IORegister::P30P33IoPort,
            0xF70 => IORegister::CpuOsc3Ctrl,
            0xF71 => IORegister::LcdCtrl,
            0xF72 => IORegister::LcdContrast,
            0xF73 => IORegister::SvdCtrl,
            0xF74 => IORegister::BuzzerCtrl1,
            0xF75 => IORegister::BuzzerCtrl2,
            0xF76 => IORegister::ClkWdTimerCtrl,
            0xF77 => IORegister::SwTimerCtrl,
            0xF78 => IORegister::ProgTimerCtrl,
            0xF79 => IORegister::ProgTimerClkSel,
            0xF7A => IORegister::SerialIfClkSel,
            0xF7B => IORegister::HighImpedanceOutputCtrl,
            0xF7D => IORegister::IoCtrl,
            0xF7E => IORegister::IoPullupCfg,
            _ => panic!("Unknown IORegister address: {:#X}", addr),
        }
    }
}